import { Document, Neovim, OutputChannel } from 'coc.nvim';
import Git from './git';
import Repo from './repo';
import Resolver from './resolver';
import { Diff } from './types';
export default class DocumentManager {
    private nvim;
    private resolver;
    git: Git;
    private channel;
    private repoMap;
    private cachedDiffs;
    private cachedSigns;
    private cachedChangeTick;
    private currentSigns;
    private foldSettingsMap;
    private enabledFolds;
    private floatFactory;
    private config;
    private disposables;
    private virtualTextSrcId;
    private gitStatus;
    private gitStatusMap;
    private userNames;
    constructor(nvim: Neovim, resolver: Resolver, git: Git, channel: OutputChannel);
    private getUsername;
    private getConfig;
    private get showBlame();
    private get realtime();
    private showBlameInfo;
    private get virtualText();
    private get signOffset();
    private get enableGutters();
    private init;
    toggleGutters(): Promise<void>;
    toggleFold(): Promise<void>;
    getRepo(bufnr?: number): Promise<Repo>;
    refreshStatus(bufnr?: number): Promise<void>;
    resolveGitRoot(bufnr: number): Promise<string>;
    private setGitStatus;
    private setBufferStatus;
    getCurrentChunk(): Promise<Diff>;
    showDoc(content: string, filetype?: string): Promise<void>;
    chunkInfo(): Promise<void>;
    nextChunk(): Promise<void>;
    prevChunk(): Promise<void>;
    diffDocument(doc: Document, init?: boolean): Promise<void>;
    private updateGutters;
    private getSignName;
    chunkStage(): Promise<void>;
    chunkUndo(): Promise<void>;
    showCommit(): Promise<void>;
    browser(action?: string, range?: [number, number]): Promise<void>;
    diffCached(): Promise<void>;
    private getBlameInfo;
    safeRun(args: string[], root: string): Promise<string>;
    dispose(): void;
}
