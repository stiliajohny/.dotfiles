; -------------------
; Core Configuration
; -------------------

[protocol]
    version = 2

[user]
    email = stilia.johny@gmail.com
    name = John Stilia
    # signingkey = 3EC5B74B3C23D18BFEF0BCC46B43560EE299AA30

[includeIf "gitdir:~/Documents/Projects/BIS/"]
    path = ~/work/.gitconfig


[core]
    editor = vim
    whitespace = fix,trailing-space,cr-at-eol
    # hooksPath = ~/.config/git/hooks
    excludesfile = ~/.gitignore
    commitGraph = true
    pager = diff-so-fancy | less --tabs=4 -RFX

[credential]
    helper = cache --timeout=7200

[init]
    defaultBranch = master

[commit]
	gpgsign = true
	status = true

; ----------------
; Colors
; ----------------

[color]
    advice = true
    branch = true
    diff = true
    grep = true
    interactive = true
    pager = true
    push = true
    remote = true
    showBranch = true
    status = true
    transport = true
    ui = true

; -----------------
; URL Aliases
; -----------------

[url "git@github.com:"]
    insteadOf = @gh:

[url "git@gitlab.com:"]
    insteadOf = @gl:

[url "git@bitbucket.org:"]
    insteadOf = @bb:

[url "aur@aur.archlinux.org"]
    insteadOf = @aur:

[url "https://github.com/"]
    insteadOf = gh://

[url "https://gitlab.com/"]
    insteadOf = gl://

[url "https://bitbucket.org/"]
    insteadOf = bb://

[url "https://aur.archlinux.org/"]
    insteadOf = aur://

; -----------------
; Diff Configuration
; -----------------
[diff]
    algorithm = myers
    tool = vimdiff
    colorMoved = default
    renames = copy
    mnemonicPrefix = true
    wsErrorHighlight = all
    statGraphWidth = 40
[diff "bin"]
    textconv = hexdump -v -C
[difftool]
    prompt = true
[difftool "vimdiff"]
    cmd = vim -d "$LOCAL" "$REMOTE"

; ----------------
; Merge Configuration
; ----------------
[merge]
    ff = false
    conflictStyle = merge
    tool = vimmerge

[mergetool]
    prompt = true
    keepBackup = false
    writeToTemp = true

[mergetool "vimmerge"]
    cmd = vimmerge "$MERGED" "$BASE" "$LOCAL" "$REMOTE"
    trustExitCode = true

[mergetool "vim-diffconflicts"]
    cmd = vim -f -c DiffConflictsWithHistory "$MERGED" "$BASE" "$LOCAL" "$REMOTE"
    trustExitCode = true

[mergetool "fugitive"]
    cmd = vim -f -c Gvdiff "$MERGED"

; ---------------
; Rebase and Fetch
; ---------------

[rebase]
    missingCommitsCheck = warn
    abbreviateCommands = false
    instructionFormat = %<(60,trunc)%s   %cn <%ce>   [GPG: %G?% GK]
    untrackedCache = true
    autoSquash = true
    stat = true

[fetch]
    prune = false
    output = compact

[pull]
    rebase = interactive
    recurseSubmodules = true
    initSubmodules = true
    ff = only

; -------------
; Push Settings
; -------------

[push]
    default = simple
    gpgSign = if-asked
    followTags = true

[submodule]
    fetchJobs = 10

; -----------------
; Additional Options
; -----------------

[grep]
    lineNumber = true
    patternType = perl

[interactive]
    singlekey = true
    diffFilter = diff-so-fancy --patch

[branch]
    autoSetupMerge = true
    autoSetupRebase = always

[status]
    short = true
    branch = true
    showStash = true
    submoduleSummary = true
    renames = copy

[log]
    abbrevCommit = true
    decorate = short
    date = format:%a, %Y-%m-%d %R (%z)
    follow = true
    graphColors = 1,2,3,4,5,6,8,166,9,10,11,12,13,14,15,208
    showRoot = true
    mailmap = true

[rerere]
    enabled = true

[column]
    ui = auto,column

[web]
    browser = ch

[advice]
    pushUpdateRejected = false
    statusHints = false
    statusUoption = false
    commitBeforeMerge = false
    resolveConflict = false
    implicitIdentity = false
    detachedHead = false
    amWorkDir = true
    rmHints = true
    addEmbeddedRepo = false
    ignoredHook = true
    waitingForEditor = false

[format]
    pretty = lf

; ----------------
; Pretty Formats
; ----------------

[pretty]
    lo = tformat:%C(auto)%h%C(reset)%C(auto)%d%C(reset) %s %C(italic blue)%ad%C(reset) %C(241)%aN%C(reset)
    lc = format:%C(auto)%h%C(reset) %C(white)-%C(reset) %C(italic blue)%ad%C(reset) %C(italic cyan)(%ar)%C(reset)%C(auto)%d%C(reset)%n %C(white)⤷%C(reset) %s %C(241)- %aN <%aE>%C(reset)%n
    lt = format:%C(auto)%h%C(reset) %C(white)-%C(reset) %C(italic blue)%ad%C(reset) %C(italic cyan)(%ar)%C(reset)%C(auto)%d%C(reset)%n %C(white)⤷%C(reset) %s %C(241)- %aN <%aE>%C(reset)%n%w(0,7,7)%+(trailers:only,unfold)
    lf = format:%C(auto)%h%C(reset)%C(auto)%d%C(reset) %C(italic 239)[P: %p] [T: %t]%C(reset)%n%C(white)Author:%C(reset) %aN %C(241)<%aE>%C(reset)%n %C(italic blue)%ad%C(reset) %C(italic cyan)(%ar)%C(reset)%n%C(white)Commit:%C(reset) %cN %C(241)<%cE>%C(reset) %C(italic 239)[GPG: %G?% GK]%C(reset)%n %C(italic blue)%cd%C(reset) %C(italic cyan)(%cr)%C(reset)%n%C(bold)%s%C(reset)%n%-b%n%-N%n

; Additional Formats and Aliases
; (continued formatting remains unchanged)

[alias]
    # Aliases for common git commands
    # e.g., l = log, s = status, co = checkout
    # Many custom commands are defined here for convenience

[trailer]
    separators = ":#"

; ----------------
; SVN and HTTP
; ----------------

[svn]
    rmdir = true

[http]
    sslVerify = true

[checkout]
    recurseSubmodules = true
    initSubmodules = true

[gpg]
    program = /usr/local/bin/gpg


[browser "ch"]
    cmd = open -a Google Chrome.app
